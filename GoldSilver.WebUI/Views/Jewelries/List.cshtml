@model GoldSilver.WebUI.Models.JewelriesListViewModel

@{
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
    ViewBag.Title = "Список всіх виробів";
}

<h2>Список всіх виробів</h2>

@*Назви розділів каталогів*@
<div class="hidden-lg hidden-md hidden-sm dd-catalogue"  >
    <div class="dropdown">
        <button class="btn btn-link dropdown-toggle dd-btn" type="button" data-toggle="dropdown">
            Виберіть розділ каталогу
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li><a href="#">Каблучки</a></li>
            <li><a href="#">Сережки</a></li>
            <li><a href="#">Обручки</a></li>
            <li><a href="#">Заручальні каблучки</a></li>
            <li><a href="#">Печатки</a></li>
            <li><a href="#">Хрестики</a></li>
            <li><a href="#">Підвіски</a></li>
            <li><a href="#">Браслети</a></li>
        </ul>
    </div>
</div>

@* Sorting buttons *@

<label class="mr-sm-2" for="inlineFormCustomSelect">Сортувати по:</label>
<select class="custom-select mb-2 mr-sm-2 mb-sm-0" id="sortSelect">
    <option value="standart" @(((ViewBag.Sort == "Standart") || ViewBag.Sort == "") ? "selected" : "")>Стандартне</option>
    <option value="name" @((ViewBag.Sort == "Name") ? "selected" : "")>Назві</option>
    <option value="weight" @(((ViewBag.Sort == "Weight") || ViewBag.Sort == "") ? "selected" : "")>Вазі</option>
    <option value="popularity" @(((ViewBag.Sort == "Popularity") || ViewBag.Sort == "") ? "selected" : "")>Популярності</option>
</select>


<script>
    $("#sortSelect").change(function () {
        var sortBy = $("#sortSelect option:selected").val();
        var url = window.location.href;
        var direction = 'ASC';

        switch (sortBy) {

            case 'standart':
                url = url.split('?')[0];
                break;

            case 'name':
                url = addUrlParameter(url, 'sortBy', 'Name');
                url = addUrlParameter(url, 'sortDirection', direction);
                break;

            case 'weight':
                url = addUrlParameter(url, 'sortBy', 'Weight');
                url = addUrlParameter(url, 'sortDirection', direction);
                break;

            case 'popularity':
                url = addUrlParameter(url, 'sortBy', 'Popularity');
                url = addUrlParameter(url, 'sortDirection', direction);
                break;
        }

        window.location.href = url;

    });

    function addUrlParameter(url, param, paramVal) {
        var newUrl;

        if (url.indexOf(param) > -1) {
            newUrl = updateURLParameter(url, param, paramVal);
        } else if (url.indexOf('?') > -1) {
            newUrl = url + '&' + param + '=' + paramVal;
        } else {
            newUrl = url + '?' + param + '=' + paramVal;
        }

        return newUrl;
    }

    function updateURLParameter(url, param, paramVal) {
        var TheAnchor = null;
        var newAdditionalURL = "";
        var tempArray = url.split("?");
        var baseURL = tempArray[0];
        var additionalURL = tempArray[1];
        var temp = "";

        if (additionalURL) {
            var tmpAnchor = additionalURL.split("#");
            var TheParams = tmpAnchor[0];
            TheAnchor = tmpAnchor[1];
            if (TheAnchor)
                additionalURL = TheParams;

            tempArray = additionalURL.split("&");

            for (var i = 0; i < tempArray.length; i++) {
                if (tempArray[i].split('=')[0] != param) {
                    newAdditionalURL += temp + tempArray[i];
                    temp = "&";
                }
            }
        }
        else {
            var tmpAnchor = baseURL.split("#");
            var TheParams = tmpAnchor[0];
            TheAnchor = tmpAnchor[1];

            if (TheParams)
                baseURL = TheParams;
        }

        if (TheAnchor)
            paramVal += "#" + TheAnchor;

        var rows_txt = temp + "" + param + "=" + paramVal;
        return baseURL + "?" + newAdditionalURL + rows_txt;
    }

</script>

<div class="row feature">
    @{ foreach (var j in Model.Jewelries)
        {
            Html.RenderPartial("JewelSummary", j);
        }
    }
</div>

<div class="row">
    <div class="col-lg-3 col-centered">
        <a href="#" class="btn btn-default" id="add-more">Догрузити...</a>
        <svg id="loader" display="none" width='38px' height='38px' xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="uil-ring-alt"><rect x="0" y="0" width="100" height="100" fill="none" class="bk"></rect><circle cx="50" cy="50" r="40" stroke="#e0e0e0" fill="none" stroke-width="10" stroke-linecap="round"></circle><circle cx="50" cy="50" r="40" stroke="#e8b5e6" fill="none" stroke-width="6" stroke-linecap="round"><animate attributeName="stroke-dashoffset" dur="2s" repeatCount="indefinite" from="0" to="502"></animate><animate attributeName="stroke-dasharray" dur="2s" repeatCount="indefinite" values="150.6 100.4;1 250;150.6 100.4"></animate></circle></svg>
    </div>
</div>

<div class="row">
    <div class="col-lg-12 col-centered">
        @Html.PageLinks(Model.PagingInfo, x => Url.Action("List", new { page = x, category = Model.CurrentCategory }))
    </div>
</div>

<script>
    var currentPage = @Model.PagingInfo.page +1;

    $("#add-more").click(function (event) {
        event.preventDefault();
        jQuery.ajax({
            url: '/Jewelries/GetPage?page=' + currentPage,
            beforeSend: function () {
                $('#loader').show();
                $('#add-more').hide();
            },
            complete: function () {
                $('#loader').hide();
                $('#add-more').show();

                $('.glyphicon-hover').hover(function () {
                    $(this).addClass('glyphicon-heart').removeClass('glyphicon-heart-empty');
                }, function () {
                    $(this).removeClass('glyphicon-heart').addClass('glyphicon-heart-empty');
                });

                $('.product-description').hover(function () {
                    $(this).find('.description-to-show').removeClass('hover-description');
                }, function () {
                    $(this).find('.description-to-show').addClass('hover-description');
                    });

            },
            eror: function () {
                $('#loader').hide();
                $('#add-more').show();
            },
            success: function (result) {
                var jeweleries = result.Jewelries;
                $('#jewTmpl').tmpl(jeweleries).appendTo('.feature');
            }
        });
    });


</script>