@model GoldSilver.Domain.Entities.Jewelry

@{
    ViewBag.Title = "Admin: Edit " + @Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h1>Edit @Model.Name</h1>
@using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.ValidationSummary()

    @Html.HiddenFor(model => model.JewelryId)
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Name)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name)
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Article)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Article)
        @Html.ValidationMessageFor(model => model.Article)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Description)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Fineness)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Fineness)
        @Html.ValidationMessageFor(model => model.Fineness)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Weight)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Weight)
        @Html.ValidationMessageFor(model => model.Weight)
    </div>
    
    
    <div class="editor-label">
        @Html.LabelFor(model => model.CategoryId, "Category")
    </div>
    <div class="editor-field">
        @Html.DropDownList("CategoryId", String.Empty)
        @Html.ValidationMessageFor(model => model.CategoryId)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.MaterialId, "Material")
    </div>
    <div class="editor-field">
        @Html.DropDownList("MaterialId", String.Empty)
        @Html.ValidationMessageFor(model => model.MaterialId)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.GemstoneId, "Gemstone")
    </div>
    <div class="editor-field">
        @Html.DropDownList("GemstoneId", String.Empty)
        @Html.ValidationMessageFor(model => model.GemstoneId)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Popularity)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Popularity)
        @Html.ValidationMessageFor(model => model.Popularity)
    </div>    
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Set)
    </div>    
    <div class="editor-field">
        @Html.EditorFor(model => model.Set)
        @Html.ValidationMessageFor(model => model.Set)
    </div>
    
    
    <div class="editor-label">Image</div>
    <div class="editor-field">
        @if (Model.ImageData == null)
        {
            @:None
        }
        else
        {
            <img width="150" height="150" src="@Url.Action("GetImage", "Jewelries", new { Model.JewelryId })" />
        }
        <div>
            Upload new image:
            <input class="multiple" type="file" name="files" multiple />
        </div>
    </div>
    <input type="submit" value="Save" />
    @Html.ActionLink("Cancel and return to List", "Index")
}

<script type="text/javascript">
    $(function () {
        if (window.FileReader != null) {
            $('#single').hide();
            $('.single').prop('disabled', true);
        } else {
            $('#multiple').hide();
            $('.multiple').prop('disabled', true);
        }
    });
</script>

