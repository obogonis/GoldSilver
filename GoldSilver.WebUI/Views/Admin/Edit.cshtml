@model GoldSilver.Domain.Entities.Jewelry

@{
    ViewBag.Title = "Admin: Edit " + @Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    @if (Model.JewelryId == 0)
    {
        <h1>Add new</h1>
    }
    else
    {
        <h1>Edit "@Model.Name"</h1>
    }
    <p>

    </p>

    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.ValidationSummary()

        @Html.HiddenFor(model => model.JewelryId)

        @Html.ActionLink("<- Повернутись", "Index", null, new { @class = "btn btn-default" })
        @:|
        <input class="btn btn-success" type="submit" value="Save" />

        <br /><br /><br />

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field col-lg-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label  col-lg-2">
                @Html.LabelFor(model => model.Article)
            </div>
            <div class="editor-field  col-lg-10">
                @Html.EditorFor(model => model.Article)
                @Html.ValidationMessageFor(model => model.Article)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label  col-lg-2">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field col-lg-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.Fineness)
            </div>
            <div class="editor-field col-lg-10">
                @Html.EditorFor(model => model.Fineness)
                @Html.ValidationMessageFor(model => model.Fineness)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.Weight)
            </div>
            <div class="editor-field col-lg-10">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.CategoryId, "Category")
            </div>
            <div class="editor-field col-lg-10">
                @Html.DropDownList("CategoryId", String.Empty)
                @Html.ValidationMessageFor(model => model.CategoryId)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.MaterialId, "Material")
            </div>
            <div class="editor-field col-lg-10">
                @Html.DropDownList("MaterialId", String.Empty)
                @Html.ValidationMessageFor(model => model.MaterialId)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.GemstoneId, "Gemstone")
            </div>
            <div class="editor-field col-lg-10">
                @Html.DropDownList("GemstoneId", String.Empty)
                @Html.ValidationMessageFor(model => model.GemstoneId)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.Popularity)
            </div>
            <div class="editor-field col-lg-10">
                @Html.EditorFor(model => model.Popularity)
                @Html.ValidationMessageFor(model => model.Popularity)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                @Html.LabelFor(model => model.Set)
            </div>
            <div class="editor-field col-lg-10">
                @Html.EditorFor(model => model.Set)
                @Html.ValidationMessageFor(model => model.Set)
            </div>
        </div>

        <div class="form-group row">
            <div class="editor-label col-lg-2">
                <label for="files">Images</label>
            </div>
            <div class="editor-field col-lg-10">
                <input class="multiple btn btn-default" type="file" name="files" multiple />
            </div>
        </div>
    }

    <div class="form-group row">
        <div class="editor-label col-lg-2">Images</div>
        @foreach (var img in Model.Images)
        {
            var imgId = "imgId-@img.Id";
            <div class="editor-field col-lg-2" id="@imgId">
                @if (img.ImageData.Count() == 0)
                {
                    @:None
                }
                else
                {
                    using (Ajax.BeginForm("DeleteImg", "Admin", null, new AjaxOptions {
                        InsertionMode = InsertionMode.Replace
                    }))
                    {
                        <img class="img-edit" width="120" height="120" src="@Url.Action("GetImage", "Jewelries", new { JewelryId = img.Id })" />
                        @Html.HiddenFor(modelItem => img.Id)
                        <input type="submit" class="btn btn-xs btn-danger delete-img" value="x" />
                    }
                }
            </div>
        }
    </div>



</div>

<script type="text/javascript">
    $(function () {
        if (window.FileReader != null) {
            $('#single').hide();
            $('.single').prop('disabled', true);
        } else {
            $('#multiple').hide();
            $('.multiple').prop('disabled', true);
        }
    });
</script>

